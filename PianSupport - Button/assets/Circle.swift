//
//  Circle.swift
//  PainSquad
//
//  Created by thePainSquad on 2016-03-15.
//  Copyright (c) 2016 PS. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class Circle : NSObject {

    //// Cache

    private struct Cache {
        static let color: UIColor = UIColor(red: 0.000, green: 0.663, blue: 0.639, alpha: 1.000)
        static let color2: UIColor = UIColor(red: 0.500, green: 0.500, blue: 0.500, alpha: 0.000)
    }

    //// Colors

    public class var color: UIColor { return Cache.color }
    public class var color2: UIColor { return Cache.color2 }

    //// Drawing Methods

    public class func drawCircleFilled() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// FilledCircle Drawing
        let filledCirclePath = UIBezierPath(ovalInRect: CGRectMake(8, 8, 195, 195))
        Circle.color.setFill()
        filledCirclePath.fill()


        //// Text Drawing
        let textRect = CGRectMake(46, 80, 120, 50)
        let textTextContent = NSString(string: "Rash")
        let textStyle = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        textStyle.alignment = .Center

        let textFontAttributes = [NSFontAttributeName: UIFont.systemFontOfSize(50), NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = textTextContent.boundingRectWithSize(CGSizeMake(textRect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, textRect);
        textTextContent.drawInRect(CGRectMake(textRect.minX, textRect.minY + (textRect.height - textTextHeight) / 2, textRect.width, textTextHeight), withAttributes: textFontAttributes)
        CGContextRestoreGState(context)
    }

    public class func drawCircleEmpty() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// EmptyCircle Drawing
        let emptyCirclePath = UIBezierPath(ovalInRect: CGRectMake(8, 8, 195, 195))
        Circle.color.setStroke()
        emptyCirclePath.lineWidth = 1
        emptyCirclePath.stroke()


        //// Text Drawing
        let textRect = CGRectMake(46, 80, 120, 50)
        let textTextContent = NSString(string: "Rash")
        let textStyle = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        textStyle.alignment = .Center

        let textFontAttributes = [NSFontAttributeName: UIFont.systemFontOfSize(50), NSForegroundColorAttributeName: Circle.color, NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = textTextContent.boundingRectWithSize(CGSizeMake(textRect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, textRect);
        textTextContent.drawInRect(CGRectMake(textRect.minX, textRect.minY + (textRect.height - textTextHeight) / 2, textRect.width, textTextHeight), withAttributes: textFontAttributes)
        CGContextRestoreGState(context)
    }

}
